interface IResponse {
	code: Int!
	message: String!
}

type TeamMember {
	id: ID!
	name: String
	email: String
	phone: String
	whatsapp: String
	college: String
}

type FormData {
	id: ID!
	teamName: String!
	teamLeader: String!
	email: String!
	phone: String!
	whatsapp: String!
	college: String!
	teamMembers: [TeamMember]
}

input SearchInput {
	teamName: String
	teamLeader: String
	email: String
}

type FormQueryResponse implements IResponse {
	code: Int!
	message: String!
	form: [FormData!]
}

type FormMutationResponse implements IResponse {
	code: Int!
	message: String!
	form: FormData
}

input TeamMemberInput {
	name: String!
	email: String!
	phone: String!
	whatsapp: String!
	college: String!
}

input FormDataInput {
	teamName: String!
	teamLeader: String!
	email: String!
	phone: String!
	whatsapp: String!
	college: String!
	teamMembers: [TeamMemberInput]
}

input PaginateInput {
	limit: Int!
	offset: Int!
}

type Query {
	form(id: ID!): FormQueryResponse
	forms: FormQueryResponse
}

type Mutation {
	createForm(createFormInput: FormDataInput): FormMutationResponse
	updateForm(id: ID!, updateFormInput: FormDataInput): FormMutationResponse
	deleteForm(id: ID!): FormMutationResponse
}
